[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "AGISwarm.llm_instruct_ms"
dynamic = ["version"]
description = "LLM Instruct Microservice project"
readme = "README.md"

requires-python = ">=3.10"
license = { file = "LICENSE.txt" }
keywords = ["sample", "setuptools", "development"]
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
    'numpy~=1.26.0',
    "fastapi~=0.114.0",
    "uvicorn~=0.29.0",
    "pydantic~=2.9.0",
    "hydra-core~=1.3.2",
    "AGISwarm.asyncio_queue_manager",
]
[project.optional-dependencies]
vllm = ["vllm==0.6.2"]
transformers = ["transformers"]
llama-cpp = ["llama_cpp_python"]
backends = [
    "AGISwarm.llm_instruct_ms[transformers]",
    "AGISwarm.llm_instruct_ms[vllm]",
    "AGISwarm.llm_instruct_ms[llama_cpp]",
]
GUI = ["jinja2"]


test = ['pytest~=8.2.1']
analyze = [
    'pyright',
    'pylint',
    'bandit',
    'black',
    'isort',
]
build = ['setuptools', 'wheel', 'build']
publish = ['twine']

all = [
    'AGISwarm.llm_instruct_ms[test]',
    'AGISwarm.llm_instruct_ms[analyze]',
    'AGISwarm.llm_instruct_ms[backends]',
    'AGISwarm.llm_instruct_ms[GUI]',
]


[tool.setuptools.dynamic]
version = { file = "VERSION" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
python_template = ["py.typed"]

[tool.isort]
profile = "black"

[tool.pylint.'MESSAGES CONTROL']
disable = "wrong-import-order"