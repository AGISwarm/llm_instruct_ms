[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "AGISwarm.llm_instruct_ms"
dynamic = ["version"]
description = "LLM Instruct Microservice project"
readme = "README.md"

requires-python = ">=3.10"
license = { file = "LICENSE.txt" }
keywords = ["sample", "setuptools", "development"]
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
    'numpy',
    "fastapi",
    "uvicorn",
    "pydantic",
    "pydantic_settings",
    "ruamel.yaml",
]
[project.optional-dependencies]
vllm = ["vllm"]
transformers = ["transformers"]
llama-cpp = ["llama_cpp_python"]
backends = [
    "AGISwarm.llm_instruct_ms[transformers]",
    "AGISwarm.llm_instruct_ms[vllm]",
    "AGISwarm.llm_instruct_ms[llama_cpp]",
]
GUI = ["jinja2"]


test = ['pytest==8.2.1']
analyze = [
    'pyright==1.1.364',
    'pylint==3.2.2',
    'bandit==1.7.8',
    'black==24.4.2',
    'isort==5.13.2',
]
build = ['setuptools', 'wheel', 'build']
publish = ['twine']

all = [
    'AGISwarm.llm_instruct_ms[test]',
    'AGISwarm.llm_instruct_ms[analyze]',
    'AGISwarm.llm_instruct_ms[backends]',
    'AGISwarm.llm_instruct_ms[GUI]',
]


[tool.setuptools.dynamic]
version = { file = "VERSION" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
python_template = ["py.typed"]
